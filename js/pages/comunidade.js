// js/pages/comunidade.js - Vers√£o Modernizada

class ComunidadeManager {
    constructor() {
        this.posts = [];
        this.filtroAtivo = 'todas';
        this.tags = [];
        this.userProfile = this.loadUserProfile();
        this.init();
    }

    init() {
        console.log('üöÄ Sistema da Comunidade inicializando...');
        
        this.loadMockPosts();
        this.setupEventListeners();
        this.renderPosts();
        
        console.log('‚úÖ Sistema da Comunidade inicializado!');
    }

    loadUserProfile() {
        // Simula dados do perfil do usu√°rio (mesmo do cursos.js)
        return {
            skills: ['JavaScript', 'HTML', 'CSS', 'React', 'Git', 'Python'],
            interests: ['Front-End', 'Cloud', 'IA'],
            level: 'J√∫nior',
            certifications: [
                'AWS Cloud Practitioner',
                'Oracle Certified Professional',
                'Python Certification'
            ],
            completedCourses: ['JavaScript B√°sico', 'HTML/CSS Fundamentals'],
            careerGoals: ['Full-Stack Developer', 'Cloud Architect']
        };
    }

    loadMockPosts() {
        this.posts = [
            {
                id: 1,
                titulo: "Como implementar autentica√ß√£o JWT em React?",
                conteudo: "Estou desenvolvendo minha primeira aplica√ß√£o React e preciso implementar autentica√ß√£o com JWT. J√° tenho a API pronta, mas estou com d√∫vidas sobre como armazenar o token e gerenciar o estado de autentica√ß√£o no front-end. Algu√©m pode me dar dicas de boas pr√°ticas?",
                categoria: "Front-End",
                nivel: "Intermedi√°rio",
                tags: ["React", "JWT", "Autentica√ß√£o", "JavaScript"],
                autor: {
                    nome: "Steve Jobs",
                    avatar: "/assets/images/perfil-elias-silva.png",
                    nivel: "J√∫nior"
                },
                tempo: "h√° 2 horas",
                likes: 12,
                respostas: 5,
                visualizacoes: 89,
                liked: false,
                destacado: true,
                compassResponse: null,
                respostasLista: [
                    {
                        autor: {
                            nome: "Ana Souza",
                            avatar: "/assets/images/ana-souza.jpg"
                        },
                        conteudo: "Recomendo usar React Context para gerenciar o estado de autentica√ß√£o. Para armazenar o token, voc√™ pode usar localStorage ou sessionStorage dependendo se quer manter a sess√£o ap√≥s fechar o browser.",
                        tempo: "h√° 1 hora"
                    },
                    {
                        autor: {
                            nome: "Carlos Lima",
                            avatar: "/assets/images/avatar-carlos.jpg"
                        },
                        conteudo: "Cuidado com localStorage para tokens sens√≠veis. Uma alternativa mais segura √© usar httpOnly cookies. D√° uma olhada na biblioteca 'react-query' para gerenciar o estado das requisi√ß√µes autenticadas.",
                        tempo: "h√° 45 min"
                    }
                ]
            },
            {
                id: 2,
                titulo: "Melhor estrat√©gia para estudar AWS Cloud Practitioner?",
                conteudo: "Pessoal, estou me preparando para a certifica√ß√£o AWS Cloud Practitioner e queria saber qual a melhor estrat√©gia de estudos. J√° tenho alguma experi√™ncia com cloud, mas √© minha primeira certifica√ß√£o AWS. Quanto tempo voc√™s dedicaram e quais recursos foram mais √∫teis?",
                categoria: "Certifica√ß√µes",
                nivel: "Iniciante",
                tags: ["AWS", "Certifica√ß√£o", "Cloud", "Estudos"],
                autor: {
                    nome: "Maria Paula",
                    avatar: "/assets/images/maria-paula.jpg",
                    nivel: "Pleno"
                },
                tempo: "h√° 4 horas",
                likes: 8,
                respostas: 3,
                visualizacoes: 156,
                liked: true,
                destacado: false,
                compassResponse: {
                    titulo: "An√°lise Personalizada da Compass IA",
                    conteudo: "Baseado no seu perfil, recomendo focar em 3 pilares: 1) Curso oficial AWS Academy (40h de estudo), 2) Pr√°tica hands-on com Free Tier (criar EC2, S3, RDS b√°sicos), 3) Simulados focados em billing e security. Com seu background, 6-8 semanas de estudo dedicado devem ser suficientes."
                },
                respostasLista: [
                    {
                        autor: {
                            nome: "Jo√£o Santos",
                            avatar: "/assets/images/avatar-joao.png"
                        },
                        conteudo: "Passei ano passado! Recomendo muito o curso da AWS Academy + simulados do ExamTopics. Foquei bastante em billing e IAM que caem muito na prova.",
                        tempo: "h√° 2 horas"
                    }
                ]
            },
            {
                id: 3,
                titulo: "Transi√ß√£o de carreira: Como sair do suporte t√©cnico para desenvolvimento?",
                conteudo: "Trabalho h√° 3 anos em suporte t√©cnico de TI e sempre tive interesse em programa√ß√£o. J√° fiz alguns cursos online de Python e JavaScript, mas me sinto perdido sobre como fazer essa transi√ß√£o. Devo buscar uma vaga j√∫nior direto ou fazer mais cursos primeiro? Como mostrar que tenho potencial mesmo sem experi√™ncia profissional em dev?",
                categoria: "Carreira",
                nivel: "Iniciante",
                tags: ["Carreira", "Transi√ß√£o", "Desenvolvimento", "Python", "JavaScript"],
                autor: {
                    nome: "Roberto Santos",
                    avatar: "/assets/images/avatar-roberto.png",
                    nivel: "Iniciante"
                },
                tempo: "h√° 6 horas",
                likes: 15,
                respostas: 8,
                visualizacoes: 234,
                liked: false,
                destacado: false,
                compassResponse: null,
                respostasLista: [
                    {
                        autor: {
                            nome: "Fernanda Costa",
                            avatar: "/assets/images/avatar-fernanda.jpg"
                        },
                        conteudo: "Fiz uma transi√ß√£o similar! Minha dica: monte um portf√≥lio s√≥lido no GitHub com pelo menos 3-4 projetos bem documentados. Sua experi√™ncia em suporte √© valiosa - voc√™ entende o usu√°rio final!",
                        tempo: "h√° 3 horas"
                    },
                    {
                        autor: {
                            nome: "Lucas Mendes",
                            avatar: "/assets/images/avatar-lucas.png"
                        },
                        conteudo: "Al√©m do portf√≥lio, considere contribuir com projetos open source. Mostra que voc√™ consegue trabalhar em equipe e seguir padr√µes de c√≥digo. LinkedIn atualizado tamb√©m √© essencial!",
                        tempo: "h√° 1 hora"
                    }
                ]
            },
            {
                id: 4,
                titulo: "Docker vs Kubernetes: Quando usar cada um?",
                conteudo: "Estou estudando DevOps e me confundo com Docker e Kubernetes. Entendo que Docker √© para containeriza√ß√£o, mas quando exatamente preciso do Kubernetes? Para projetos pequenos/m√©dios, o Docker Compose n√£o seria suficiente?",
                categoria: "DevOps",
                nivel: "Intermedi√°rio",
                tags: ["Docker", "Kubernetes", "DevOps", "Containers"],
                autor: {
                    nome: "Camila Rodrigues",
                    avatar: "/assets/images/avatar-camila.png",
                    nivel: "Intermedi√°rio"
                },
                tempo: "h√° 8 horas",
                likes: 6,
                respostas: 2,
                visualizacoes: 98,
                liked: false,
                destacado: false,
                compassResponse: null,
                respostasLista: []
            },
            {
                id: 5,
                titulo: "Freelance: Como precificar projetos de desenvolvimento web?",
                conteudo: "Comecei a fazer freelas de desenvolvimento web (principalmente React) e sempre fico na d√∫vida sobre precifica√ß√£o. Como voc√™s calculam o valor? Por hora, por projeto, ou por funcionalidade? E como lidar com mudan√ßas de escopo durante o desenvolvimento?",
                categoria: "Freelance",
                nivel: "Intermedi√°rio",
                tags: ["Freelance", "Precifica√ß√£o", "React", "Web Development"],
                autor: {
                    nome: "Daniel Oliveira",
                    avatar: "/assets/images/avatar-daniel.png",
                    nivel: "Pleno"
                },
                tempo: "h√° 1 dia",
                likes: 23,
                respostas: 12,
                visualizacoes: 456,
                liked: true,
                destacado: true,
                compassResponse: null,
                respostasLista: [
                    {
                        autor: {
                            nome: "Paula Ferreira",
                            avatar: "/assets/images/avatar-paula.png"
                        },
                        conteudo: "Trabalho com valor por projeto, mas sempre com escopo muito bem definido. Para mudan√ßas, tenho uma cl√°usula de 20% de margem inclu√≠da no or√ßamento inicial.",
                        tempo: "h√° 18 horas"
                    }
                ]
            }
        ];
    }

    setupEventListeners() {
        // Form de nova postagem
        const form = document.getElementById('novaPostagemForm');
        if (form) {
            form.addEventListener('submit', (e) => {
                e.preventDefault();
                this.criarNovoPost();
            });
        }

        // Tags input
        const tagsInput = document.getElementById('tagsInput');
        if (tagsInput) {
            tagsInput.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    this.adicionarTag();
                }
            });
        }

        // Filtros
        document.querySelectorAll('.filter-chip').forEach(chip => {
            chip.addEventListener('click', () => {
                this.aplicarFiltro(chip.dataset.filter);
            });
        });

        // Compass IA - Post espec√≠fico
        const compassBtn = document.getElementById('pedirAjudaCompass');
        if (compassBtn) {
            compassBtn.addEventListener('click', () => {
                this.ajudaCompassNovoPost();
            });
        }

        // Compass IA - Global
        const compassGlobalBtn = document.getElementById('compassGlobalBtn');
        if (compassGlobalBtn) {
            compassGlobalBtn.addEventListener('click', () => {
                this.abrirCompassGlobal();
            });
        }

        // Event listeners para trending topics
        document.querySelectorAll('.trending-item').forEach(item => {
            item.addEventListener('click', () => {
                const topicText = item.querySelector('h5').textContent;
                this.filtrarPorTopico(topicText);
            });
        });
    }

    criarNovoPost() {
        const titulo = document.getElementById('tituloPost')?.value.trim();
        const categoria = document.getElementById('categoriaPost')?.value;
        const nivel = document.getElementById('nivelPost')?.value;
        const conteudo = document.getElementById('conteudoPost')?.value.trim();

        if (!titulo || !categoria || !nivel || !conteudo) {
            this.mostrarNotificacao('Por favor, preencha todos os campos obrigat√≥rios.', 'warning');
            return;
        }

        const novoPost = {
            id: Date.now(),
            titulo,
            conteudo,
            categoria,
            nivel,
            tags: [...this.tags],
            autor: {
                nome: "Elias Silva",
                avatar: "/assets/images/perfil-elias-silva.png",
                nivel: "J√∫nior"
            },
            tempo: "agora",
            likes: 0,
            respostas: 0,
            visualizacoes: 1,
            liked: false,
            destacado: false,
            compassResponse: null,
            respostasLista: []
        };

        this.posts.unshift(novoPost);
        this.limparFormulario();
        this.renderPosts();

        // Scroll para o topo
        window.scrollTo({ top: 0, behavior: 'smooth' });

        // Feedback visual
        this.mostrarNotificacao('Post publicado com sucesso! üéâ', 'success');
    }

    limparFormulario() {
        const form = document.getElementById('novaPostagemForm');
        if (form) {
            form.reset();
        }
        this.tags = [];
        this.renderTags();
    }

    adicionarTag() {
        const input = document.getElementById('tagsInput');
        if (!input) return;

        const tag = input.value.trim();

        if (tag && !this.tags.includes(tag) && this.tags.length < 5) {
            this.tags.push(tag);
            input.value = '';
            this.renderTags();
        } else if (this.tags.length >= 5) {
            this.mostrarNotificacao('M√°ximo de 5 tags permitidas', 'warning');
        }
    }

    renderTags() {
        const container = document.getElementById('tagPreview');
        if (!container) return;

        container.innerHTML = this.tags.map(tag => `
            <div class="tag-item">
                ${tag}
                <span class="tag-remove" onclick="window.comunidadeManager.removerTag('${tag}')">√ó</span>
            </div>
        `).join('');
    }

    removerTag(tag) {
        this.tags = this.tags.filter(t => t !== tag);
        this.renderTags();
    }

    aplicarFiltro(filtro) {
        // Atualizar UI dos filtros
        document.querySelectorAll('.filter-chip').forEach(chip => {
            chip.classList.remove('active');
        });
        
        const activeChip = document.querySelector(`[data-filter="${filtro}"]`);
        if (activeChip) {
            activeChip.classList.add('active');
        }

        this.filtroAtivo = filtro;
        this.renderPosts();
        
        this.mostrarNotificacao(`Filtro "${filtro}" aplicado`, 'info');
    }

    getPostsFiltrados() {
        let postsFiltrados = [...this.posts];

        switch (this.filtroAtivo) {
            case 'todas':
                break;
            case 'sem-resposta':
                postsFiltrados = postsFiltrados.filter(post => post.respostas === 0);
                break;
            case 'compass':
                postsFiltrados = postsFiltrados.filter(post => post.compassResponse);
                break;
            default:
                postsFiltrados = postsFiltrados.filter(post => post.categoria === this.filtroAtivo);
        }

        return postsFiltrados;
    }

    renderPosts() {
        const container = document.getElementById('feedContainer');
        if (!container) return;

        const postsFiltrados = this.getPostsFiltrados();

        if (postsFiltrados.length === 0) {
            container.innerHTML = `
                <div class="empty-state">
                    <span class="material-icons-outlined">forum</span>
                    <h3>Nenhum post encontrado</h3>
                    <p>Tente ajustar os filtros ou seja o primeiro a postar nesta categoria!</p>
                </div>
            `;
            return;
        }

        container.innerHTML = postsFiltrados.map(post => this.createPostCard(post)).join('');
        this.setupPostListeners();
    }

    createPostCard(post) {
        const compassSection = post.compassResponse ? `
            <div class="compass-response">
                <h5>${post.compassResponse.titulo}</h5>
                <p>${post.compassResponse.conteudo}</p>
            </div>
        ` : '';

        const respostasSection = post.respostasLista.length > 0 ? `
            <div class="respostas-section">
                ${post.respostasLista.map(resposta => `
                    <div class="resposta-item">
                        <div class="resposta-header">
                            <img src="${resposta.autor.avatar}" alt="Avatar" class="resposta-avatar">
                            <span class="resposta-user">${resposta.autor.nome}</span>
                            <span class="resposta-time">${resposta.tempo}</span>
                        </div>
                        <div class="resposta-content">${resposta.conteudo}</div>
                    </div>
                `).join('')}
                
                <div class="nova-resposta">
                    <img src="/assets/images/perfil-elias-silva.png" alt="Seu avatar" class="resposta-avatar">
                    <input type="text" class="resposta-input" placeholder="Adicione sua resposta..." data-post-id="${post.id}">
                    <button class="btn btn-primary" onclick="window.comunidadeManager.adicionarResposta(${post.id})" style="padding: 8px 16px; font-size: 0.9rem;">
                        <span class="material-icons-outlined" style="font-size: 1rem;">send</span>
                        Responder
                    </button>
                </div>
            </div>
        ` : `
            <div class="nova-resposta">
                <img src="/assets/images/perfil-elias-silva.png" alt="Seu avatar" class="resposta-avatar">
                <input type="text" class="resposta-input" placeholder="Seja o primeiro a responder..." data-post-id="${post.id}">
                <button class="btn btn-primary" onclick="window.comunidadeManager.adicionarResposta(${post.id})" style="padding: 8px 16px; font-size: 0.9rem;">
                    <span class="material-icons-outlined" style="font-size: 1rem;">send</span>
                    Responder
                </button>
            </div>
        `;

        return `
            <article class="post-card ${post.destacado ? 'destacado' : ''} ${post.compassResponse ? 'compass-respondido' : ''}">
                <div class="post-header">
                    <div class="post-user-info">
                        <img src="${post.autor.avatar}" alt="Avatar" class="post-avatar">
                        <div class="post-user-details">
                            <h5>${post.autor.nome}</h5>
                            <span>${post.autor.nivel} ‚Ä¢ ${post.tempo}</span>
                        </div>
                    </div>
                    <div class="post-meta">
                        <div class="post-category">${post.categoria}</div>
                        <span>${post.nivel}</span>
                    </div>
                </div>

                <div class="post-content">
                    <h4>${post.titulo}</h4>
                    <p>${post.conteudo}</p>

                    <div class="post-tags">
                        ${post.tags.map(tag => `<span class="post-tag">${tag}</span>`).join('')}
                    </div>
                </div>

                ${compassSection}

                <div class="post-actions">
                    <div class="post-stats">
                        <div class="stat-item ${post.liked ? 'liked' : ''}" onclick="window.comunidadeManager.toggleLike(${post.id})">
                            <span class="material-icons-outlined">${post.liked ? 'favorite' : 'favorite_border'}</span>
                            <span>${post.likes}</span>
                        </div>
                        <div class="stat-item">
                            <span class="material-icons-outlined">comment</span>
                            <span>${post.respostas}</span>
                        </div>
                        <div class="stat-item">
                            <span class="material-icons-outlined">visibility</span>
                            <span>${post.visualizacoes}</span>
                        </div>
                    </div>

                    <div class="post-actions-btn">
                        <button class="action-btn" onclick="window.comunidadeManager.perguntarCompass(${post.id})">
                            <span class="material-icons-outlined">auto_awesome</span>
                            Compass
                        </button>
                        <button class="action-btn" onclick="window.comunidadeManager.compartilharPost(${post.id})">
                            <span class="material-icons-outlined">share</span>
                            Compartilhar
                        </button>
                    </div>
                </div>

                ${respostasSection}
            </article>
        `;
    }

    setupPostListeners() {
        // Listeners espec√≠ficos dos posts j√° est√£o sendo configurados via onclick
        // Este m√©todo pode ser expandido para listeners mais complexos
        document.querySelectorAll('.resposta-input').forEach(input => {
            input.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') {
                    const postId = parseInt(input.dataset.postId);
                    this.adicionarResposta(postId);
                }
            });
        });
    }

    toggleLike(postId) {
        const post = this.posts.find(p => p.id === postId);
        if (post) {
            post.liked = !post.liked;
            post.likes += post.liked ? 1 : -1;
            this.renderPosts();
            
            const emoji = post.liked ? '‚ù§Ô∏è' : 'üíî';
            this.mostrarNotificacao(`Post ${post.liked ? 'curtido' : 'descurtido'}! ${emoji}`, 'info');
        }
    }

    adicionarResposta(postId) {
        const input = document.querySelector(`[data-post-id="${postId}"]`);
        if (!input) return;

        const conteudo = input.value.trim();
        if (!conteudo) {
            this.mostrarNotificacao('Digite uma resposta antes de enviar', 'warning');
            return;
        }

        const post = this.posts.find(p => p.id === postId);
        if (post) {
            post.respostasLista.push({
                autor: {
                    nome: "Elias Silva",
                    avatar: "/assets/images/perfil-elias-silva.png"
                },
                conteudo,
                tempo: "agora"
            });
            post.respostas++;
            
            this.renderPosts();
            this.mostrarNotificacao('Resposta adicionada! üí¨', 'success');
        }
    }

    perguntarCompass(postId) {
        const post = this.posts.find(p => p.id === postId);
        if (!post) return;

        if (post.compassResponse) {
            this.mostrarNotificacao('A Compass IA j√° respondeu a este post! ü§ñ', 'info');
            return;
        }

        this.mostrarNotificacao('Compass IA analisando... ü§ñ', 'info');

        // Simular processamento da IA
        setTimeout(() => {
            const response = this.generateCompassResponse(post);
            post.compassResponse = response;
            this.renderPosts();
            this.mostrarNotificacao('Compass IA respondeu! ‚ú®', 'success');
        }, 2500);
    }

    generateCompassResponse(post) {
        // Respostas baseadas na categoria e conte√∫do
        const responses = {
            'Front-End': {
                titulo: "An√°lise Front-End da Compass IA",
                conteudo: "Baseado no seu perfil e na d√∫vida apresentada, recomendo focar em padr√µes de componentes reutiliz√°veis e state management. Considere usar TypeScript para maior robustez e testes automatizados com Jest/Testing Library."
            },
            'Back-End': {
                titulo: "Sugest√£o Back-End da Compass IA",
                conteudo: "Para esta arquitetura, sugiro implementar padr√µes RESTful com documenta√ß√£o OpenAPI. Considere usar middleware para valida√ß√£o e logging. Para escalabilidade, avalie implementar cache com Redis."
            },
            'DevOps': {
                titulo: "Estrat√©gia DevOps da Compass IA",
                conteudo: "Para este cen√°rio, recomendo come√ßar com Docker para containeriza√ß√£o e depois evoluir para Kubernetes conforme a demanda. Implemente CI/CD com GitHub Actions ou GitLab CI."
            },
            'Carreira': {
                titulo: "Orienta√ß√£o de Carreira da Compass IA",
                conteudo: "Baseado no seu perfil atual, sugiro focar em construir um portf√≥lio s√≥lido e networking ativo. Participe de projetos open source e considere mentorias para acelerar seu crescimento."
            },
            'Certifica√ß√µes': {
                titulo: "Plano de Estudos da Compass IA",
                conteudo: "Para esta certifica√ß√£o, recomendo 8-10 semanas de estudo estruturado. Combine teoria (40%), pr√°tica hands-on (40%) e simulados (20%). Foque nos t√≥picos que voc√™ demonstrou menos dom√≠nio."
            },
            'Freelance': {
                titulo: "Estrat√©gia Freelance da Compass IA",
                conteudo: "Para precifica√ß√£o, considere seu custo/hora + margem + complexidade do projeto. Sempre defina escopo claro e tenha contratos bem estruturados. Builds um pipeline de clientes consistente."
            }
        };

        return responses[post.categoria] || {
            titulo: "Sugest√£o Personalizada da Compass IA",
            conteudo: "Baseado na an√°lise do seu post e perfil, recomendo pesquisar mais sobre as tecnologias mencionadas e praticar com projetos hands-on. A comunidade CareerPath tem √≥timos recursos para te ajudar!"
        };
    }

    compartilharPost(postId) {
        const post = this.posts.find(p => p.id === postId);
        if (!post) return;

        // Simular compartilhamento
        if (navigator.share) {
            navigator.share({
                title: post.titulo,
                text: post.conteudo.substring(0, 100) + '...',
                url: window.location.href
            });
        } else {
            // Fallback para navegadores que n√£o suportam Web Share API
            navigator.clipboard.writeText(window.location.href).then(() => {
                this.mostrarNotificacao('Link copiado para a √°rea de transfer√™ncia! üìã', 'success');
            });
        }
    }

    ajudaCompassNovoPost() {
        const titulo = document.getElementById('tituloPost')?.value.trim();
        const conteudo = document.getElementById('conteudoPost')?.value.trim();
        const categoria = document.getElementById('categoriaPost')?.value;

        if (!titulo && !conteudo) {
            this.mostrarNotificacao('Digite pelo menos um t√≠tulo ou descri√ß√£o para a Compass analisar', 'warning');
            return;
        }

        // Simular an√°lise da Compass
        this.mostrarNotificacao('Compass IA analisando sua d√∫vida... ü§ñ', 'info');

        setTimeout(() => {
            const sugestao = this.generatePostSuggestion(titulo, conteudo, categoria);
            this.mostrarCompassSugestao(sugestao);
        }, 2000);
    }

    generatePostSuggestion(titulo, conteudo, categoria) {
        const sugestoes = {
            'Front-End': "Sugiro detalhar qual vers√£o do React voc√™ est√° usando e se j√° tentou alguma abordagem espec√≠fica. Adicione tags como 'Context API', 'Hooks' ou 'Redux' para atrair respostas mais direcionadas.",
            'Back-End': "Recomendo especificar a linguagem/framework e vers√£o. Inclua detalhes sobre a arquitetura atual e o que j√° foi tentado.",
            'DevOps': "Adicione informa√ß√µes sobre o ambiente (AWS, Azure, GCP) e escala do projeto. Isso ajudar√° a comunidade a dar respostas mais precisas.",
            'Carreira': "Mencione sua √°rea de interesse espec√≠fica e tempo de experi√™ncia. Isso ajudar√° outros profissionais a compartilhar experi√™ncias similares.",
            'Certifica√ß√µes': "Inclua seu n√≠vel atual de conhecimento e prazo desejado para a certifica√ß√£o. A comunidade pode sugerir cronogramas realistas."
        };

        return sugestoes[categoria] || "Tente ser mais espec√≠fico sobre o contexto e o que voc√™ j√° tentou. Isso ajudar√° a comunidade a dar respostas mais √∫teis!";
    }

    mostrarCompassSugestao(sugestao) {
        // Criar modal simples para mostrar sugest√£o
        const modal = document.createElement('div');
        modal.className = 'modal-overlay show';
        modal.innerHTML = `
            <div class="modal-content">
                <div class="modal-header">
                    <h3>
                        <span class="material-icons-outlined">auto_awesome</span>
                        Sugest√£o da Compass IA
                    </h3>
                    <button class="modal-close">&times;</button>
                </div>
                <div class="compass-response" style="margin: 0;">
                    <h5>Como melhorar seu post</h5>
                    <p>${sugestao}</p>
                </div>
                <div style="margin-top: 20px; text-align: right;">
                    <button class="btn btn-primary" onclick="this.closest('.modal-overlay').remove()">
                        Entendi, obrigado!
                    </button>
                </div>
            </div>
        `;

        document.body.appendChild(modal);

        // Event listener para fechar modal
        modal.querySelector('.modal-close').addEventListener('click', () => {
            modal.remove();
        });

        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                modal.remove();
            }
        });
    }

    abrirCompassGlobal() {
        // Criar modal para pergunta global √† Compass
        const modal = document.createElement('div');
        modal.className = 'modal-overlay show';
        modal.innerHTML = `
            <div class="modal-content">
                <div class="modal-header">
                    <h3>
                        <span class="material-icons-outlined">psychology</span>
                        Perguntar √† Compass IA
                    </h3>
                    <button class="modal-close">&times;</button>
                </div>
                <div style="margin-bottom: 20px;">
                    <label class="form-label">O que voc√™ gostaria de saber?</label>
                    <textarea class="form-textarea" id="compassGlobalQuestion" placeholder="Ex: Como devo estruturar meus estudos para me tornar um desenvolvedor full-stack?" style="min-height: 100px;"></textarea>
                </div>
                <div style="display: flex; gap: 12px; justify-content: flex-end;">
                    <button class="btn btn-secondary" onclick="this.closest('.modal-overlay').remove()">
                        Cancelar
                    </button>
                    <button class="btn btn-primary" id="enviarPerguntaCompass">
                        <span class="material-icons-outlined">send</span>
                        Enviar Pergunta
                    </button>
                </div>
                <div id="compassGlobalResponse" style="margin-top: 20px;"></div>
            </div>
        `;

        document.body.appendChild(modal);

        // Event listeners
        modal.querySelector('.modal-close').addEventListener('click', () => {
            modal.remove();
        });

        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                modal.remove();
            }
        });

        modal.querySelector('#enviarPerguntaCompass').addEventListener('click', () => {
            this.processarPerguntaGlobalCompass(modal);
        });
    }

    processarPerguntaGlobalCompass(modal) {
        const pergunta = modal.querySelector('#compassGlobalQuestion').value.trim();
        if (!pergunta) {
            this.mostrarNotificacao('Digite uma pergunta para a Compass IA', 'warning');
            return;
        }

        const responseContainer = modal.querySelector('#compassGlobalResponse');
        
        // Mostrar loading
        responseContainer.innerHTML = `
            <div class="compass-response">
                <div class="typing-animation">
                    <span></span><span></span><span></span>
                </div>
                Compass analisando sua pergunta...
            </div>
        `;

        // Simular processamento
        setTimeout(() => {
            const resposta = this.generateGlobalCompassResponse(pergunta);
            responseContainer.innerHTML = `
                <div class="compass-response">
                    <h5>Resposta da Compass IA</h5>
                    <p>${resposta}</p>
                </div>
            `;
        }, 3000);
    }

    generateGlobalCompassResponse(pergunta) {
        const palavrasChave = pergunta.toLowerCase();
        
        if (palavrasChave.includes('full-stack') || palavrasChave.includes('fullstack')) {
            return "Para se tornar full-stack, recomendo esta jornada: 1) Domine HTML/CSS/JS primeiro, 2) Aprenda React para front-end, 3) Node.js + Express para back-end, 4) Banco de dados (PostgreSQL ou MongoDB), 5) Deploy e DevOps b√°sico. Tempo estimado: 8-12 meses com dedica√ß√£o consistente.";
        }
        
        if (palavrasChave.includes('carreira') || palavrasChave.includes('transi√ß√£o')) {
            return "Para transi√ß√£o de carreira em tech: 1) Identifique a √°rea de maior interesse, 2) Construa um portf√≥lio s√≥lido no GitHub, 3) Network ativo no LinkedIn e comunidades, 4) Considere freelances para ganhar experi√™ncia, 5) Estude as tecnologias mais demandadas no mercado atual.";
        }
        
        if (palavrasChave.includes('sal√°rio') || palavrasChave.includes('quanto ganha')) {
            return "Sal√°rios em tech variam muito por regi√£o e experi√™ncia. J√∫nior: R$ 3-6k, Pleno: R$ 6-12k, S√™nior: R$ 12k+. Dicas para aumentar: especialize-se em tecnologias de alta demanda, desenvolva soft skills, contribua com projetos open source e mantenha-se atualizado.";
        }
        
        if (palavrasChave.includes('curso') || palavrasChave.includes('estudar')) {
            return "Para escolher cursos eficazes: 1) Identifique seu objetivo espec√≠fico, 2) Verifique a reputa√ß√£o do instrutor/plataforma, 3) Procure cursos com projetos pr√°ticos, 4) Leia avalia√ß√µes recentes, 5) Considere cursos que oferecem certifica√ß√£o reconhecida pelo mercado.";
        }

        return "Essa √© uma excelente pergunta! Baseado na an√°lise, recomendo pesquisar mais sobre o tema espec√≠fico e verificar os recursos dispon√≠veis na nossa plataforma. A comunidade CareerPath tamb√©m tem muitos profissionais experientes que podem te ajudar com insights pr√°ticos.";
    }

    filtrarPorTopico(topico) {
        // Filtrar posts por t√≥pico trending
        const categoria = this.detectarCategoriaPorTopico(topico);
        if (categoria) {
            this.aplicarFiltro(categoria);
        }
    }

    detectarCategoriaPorTopico(topico) {
        const mapeamento = {
            'React': 'Front-End',
            'Vue.js': 'Front-End',
            'AWS': 'Certifica√ß√µes',
            'TypeScript': 'Front-End',
            'JavaScript': 'Front-End',
            'Sal√°rios': 'Carreira',
            'IA': 'IA'
        };

        for (const [palavra, categoria] of Object.entries(mapeamento)) {
            if (topico.includes(palavra)) {
                return categoria;
            }
        }
        return null;
    }

    mostrarNotificacao(mensagem, tipo = 'info') {
        // Remover notifica√ß√£o anterior se existir
        const notificacaoExistente = document.querySelector('.notification');
        if (notificacaoExistente) {
            notificacaoExistente.remove();
        }

        const icones = {
            success: 'check_circle',
            error: 'error',
            warning: 'warning',
            info: 'info'
        };

        const notificacao = document.createElement('div');
        notificacao.className = `notification ${tipo}`;
        notificacao.innerHTML = `
            <span class="material-icons-outlined notification-icon">${icones[tipo]}</span>
            <div class="notification-content">${mensagem}</div>
            <span class="material-icons-outlined notification-close">close</span>
        `;

        document.body.appendChild(notificacao);

        // Mostrar notifica√ß√£o
        setTimeout(() => {
            notificacao.classList.add('show');
        }, 100);

        // Event listener para fechar
        notificacao.querySelector('.notification-close').addEventListener('click', () => {
            notificacao.classList.remove('show');
            setTimeout(() => {
                notificacao.remove();
            }, 300);
        });

        // Auto-remover ap√≥s 5 segundos
        setTimeout(() => {
            if (notificacao.parentNode) {
                notificacao.classList.remove('show');
                setTimeout(() => {
                    notificacao.remove();
                }, 300);
            }
        }, 5000);
    }

    // M√©todo para atualizar estat√≠sticas dinamicamente
    atualizarEstatisticas() {
        const stats = {
            membros: 2847 + Math.floor(Math.random() * 10),
            postsHoje: 156 + Math.floor(Math.random() * 20),
            respostasHoje: 834 + Math.floor(Math.random() * 50),
            taxaResposta: 94 + Math.floor(Math.random() * 6)
        };

        // Atualizar se os elementos existirem
        const elementos = document.querySelectorAll('.stat-value');
        if (elementos.length >= 4) {
            elementos[0].textContent = stats.membros.toLocaleString();
            elementos[1].textContent = stats.postsHoje;
            elementos[2].textContent = stats.respostasHoje;
            elementos[3].textContent = stats.taxaResposta + '%';
        }
    }
}

// Fun√ß√£o de inicializa√ß√£o para compatibilidade com o sistema SPA
export function init() {
    console.log('üöÄ Iniciando p√°gina da comunidade...');
    
    // Aguardar DOM estar pronto
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => {
            window.comunidadeManager = new ComunidadeManager();
        });
    } else {
        window.comunidadeManager = new ComunidadeManager();
    }

    // Atualizar estat√≠sticas a cada 30 segundos
    setInterval(() => {
        if (window.comunidadeManager) {
            window.comunidadeManager.atualizarEstatisticas();
        }
    }, 30000);
}